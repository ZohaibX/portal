


@import '../../abstract/variables' ;
@import '../../abstract/mixins' ;


.image-box {

  display: block;
  margin: 0 auto;
  // centering an image

  margin-top: 3rem;
  // margin-left: 7rem;

  height: 12rem;
  width: 12rem;

  // transform: translateX(-3rem) skew(12deg);
  // as if we have floated something .. so we cannot do something with margins ..
  // so to take picture -3rem of x axis -- we use translate ..

  position: relative;
  overflow: hidden; // this will handle border radius of this image box too
  // for the case clip-path: property does not work ;
  // when picture is bigger than the space we have given to it ..
  // it will make picture according to the size of that

  border-radius: 50%;
  // for the case clip-path: property does not work ;

  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
      -webkit-clip-path: circle(50% at 50% 50%);
      clip-path: circle(50% at 50% 50%);

      -webkit-shape-outside: circle(50% at 50% 50%);
      shape-outside: circle(50% at 50% 50%);

      border-radius: none; 
  }
  
  &__image{
    height: 100% !important;
    transform: translate(1.9rem, 3rem) scale(1.7); // position the actual image 

    transition: all 0.5s ease-in;
    backface-visibility: hidden; // it covers everything weird handling animations
  }

  &__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%); // we changed y direction for some transitional effects

    color: $color-white;
    font-family: Georgia, 'Times New Roman', Times, serif;
    font-size: 1.7rem;
    text-transform: uppercase;
    text-align: center;
    opacity: 0;
    backface-visibility: hidden; // bcoz caption was shaking after transition
    transition: all 0.4s;
  }

  &:hover &__caption {
    opacity: 1;
    transform: translate(-50%, -40%);
  }

  &:hover &__image {
    transform: translate(2rem , 2.5rem) scale(1.5); // less zoomed;
    filter: blur(3px) brightness(80%); // special filter property
    // brightness -- more that 100% for brighter and less than for darker
  }
}

.intro {
  margin-top: 2rem;
  color: black;
  text-transform: uppercase;
  backface-visibility: hidden; // /* in parent element -- to not have little shaking when animation is completed */
  text-align: center;

  &__h1{
    color: black; // /* block property will make its content -- inline and will add a break in its start and the end */
    font-size: 2rem;
    font-weight: 800;
    letter-spacing: .1rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;

    @include respond(phone) {
        font-size: 1rem;
    }

    &:hover {
      text-decoration: none;
      cursor: pointer;
    }
  }

  &__h4{
    // display: block;
    /* same as the previous block */
    color: black;
    font-size: 1rem;
    font-weight: 300;
    letter-spacing: 0.1rem;
    animation: moveInRight 1s ease-out;
    /* one line animation */

    @include respond(phone) {
        font-size: .5rem;
    }
  }
}

.about {
  padding-top: 2rem;

  @include respond(tab-port) {
    padding-top: 3rem;
    padding-left: 7rem;
  }

  text-align: center;

  &-all {

    text-align: center;

    &__h4{
      display: block;
      /* same as the previous block */
      color: black;
      font-size: 1.5rem;
      font-weight: bold;
      /* one line animation */

      @include respond(phone) {
          font-size: .9rem;
      }
    }
  }

  &-1 {
    padding-left: 3rem;

    @include respond(tab-port) {
      padding-left: 0rem;
    }

      margin: 0 auto;

      li {
          // text-align: center;
          font-size: 1rem;
          padding-top: .5rem;
          padding-bottom: .5rem;

          color: black;

          &:not(:last-child) {
              border-bottom: 0.1rem solid $gray-light-4;
          }
        }
      }
  

  &-2 {
    ul {
      list-style: none;
      width: 100%;
      margin: 0 auto;

      li {
          // text-align: center;
          font-size: 1rem;
          padding-top: .5rem;
          padding-bottom: .5rem;

          color: black;

          &:not(:last-child) {
              border-bottom: 0.1rem solid $gray-light-4;
          }
        }
      }

      span {
        font-weight: bolder;
      }
  }

  &-3 {

    padding-right: 3rem;

    @include respond(tab-port) {
      padding-right: 0rem;
    }

    @include respond(tab-land) {
        margin-left: -3rem;
    }

    ul {
      list-style: none;
      width: 100%;
      margin: 0 auto;

      li {
          // text-align: center;
          font-size: 1rem;
          padding-top: .5rem;
          padding-bottom: .5rem;

          color: black;

          &:not(:last-child) {
              border-bottom: 0.1rem solid $gray-light-4;
          }
        }
      }
  }
}
